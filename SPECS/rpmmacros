%debug_package %{nil}
%mypatches %{patches}
%epics_arch linux-%{_arch}
%epics_root /opt/epics
%etop_base %{epics_root}/base
%etop_res %{epics_root}/resources
%etop_mtr %{epics_root}/motor/modules
%etop_ad %{epics_root}/areaDetector
%cmd_flags CMD_CFLAGS='%{optflags}' CMD_CXXFLAGS='%{optflags}'

%_rm_extras _rm_extras %{buildroot}
%_iocboot_makefiles _iocboot_makefiles %{epics_root}
%_file_list _file_list %{buildroot}
%_chown_me sudo chown "$(id -nu):$(id -ng)"
%_mv_me _mv_me %{buildroot}
%_patch_cmd _patch_cmd %{buildroot}
%_link_ops _link_ops %{buildroot}%{etop_res}
%_fix_arch _fix_arch %{epics_arch}

%_do_rm_patch %_rm_extras; %_patch_cmd
%_mask_opi cd %{buildroot}%{etop_res}; rm -f */test.* %{?opimask}; cd -
%_my_patch for s in %{?mypatches}; do patch -p1 < "$s"; done

%dist_srv http://127.0.0.1:8888/dist
%codeberg_archive() fetch://codeberg.org/%1/%2/archive/%3/%2-%3.tar.gz
%github_archive() https://github.com/%1/%2/archive/%3/%2-%3.tar.gz
%github_archive_ver() https://github.com/%1/%2/archive/%4%3/%2-%3.tar.gz
%meta() %{expand:%(%{_specdir}/fn-meta.py %*)}
%inherit() %{expand:%(%{_specdir}/fn-inherit.py %*)}
%eval() %{expand:%(%{_specdir}/fn-eval.sh %*)}

%_synapps_prep \
	. %{_specdir}/fn-build.sh; _mv_commit %{repo} %{commit} \
	_mv_build %{repo} %{epics_root}/%{repo}; cd %{epics_root} \
	make release MOD_='$(SUPPORT)/%{repo}' MODULE_LIST=MOD_ \
	cd %{repo}; %_my_patch \
%{nil}
%_moreapps_prep \
	. %{_specdir}/fn-build.sh; _mv_commit %{repo} %{commit} \
	_mv_build %{repo} %{epics_root}/%{repo}; cd %{epics_root}/%{repo} \
	rm -rf configure; cp -r %{epics_root}/utils/configure .; %_my_patch \
%{nil}
%_synapps_install \
	. %{_specdir}/fn-build.sh; %_link_ops %{epics_root}/%{repo} \
	_mv_dest %{epics_root}/%{repo} %{buildroot}%{epics_root} \
	%_mask_opi; %_do_rm_patch \
	%_file_list %{epics_root} > %{_builddir}/%{name}/epics.lst \
%{nil}

%_mtr_ad_prep0 \
	. %{_specdir}/fn-build.sh; _mv_commit %{repo} %{commit}; cd %{repo} \
	%_my_patch; sed -i 's@$(TOP)/\\.\\.@%{etop_supp}@' configure/RELEASE \
	cd -; mv %{repo}/iocs/*IOC . && \
		echo *IOC > ioc.lst || touch ioc.lst; rm -rf %{repo}/iocs \
%{nil}
%_mtr_ad_build \
	. %{_specdir}/fn-build.sh; _mv_build %{repo} %{etop_supp}/%{repo} \
	cd %{etop_supp}/%{repo}; make %{?_smp_mflags} %{cmd_flags}; cd - \
	for s in $(cat ioc.lst); do _mv_build "$s" %{epics_root}/"$s" \
	cd %{epics_root}/"$s"; make %{?_smp_mflags} %{cmd_flags}; cd -; done \
%{nil}
%_mtr_ad_install \
	. %{_specdir}/fn-build.sh; %_link_ops %{etop_supp}/%{repo} \
	_mv_dest %{etop_supp}/%{repo} %{buildroot}%{etop_supp} \
	for s in $(cat ioc.lst); do %_link_ops %{epics_root}/"$s" \
	_mv_dest %{epics_root}/"$s" %{buildroot}%{epics_root}; done \
	%_mask_opi; %_do_rm_patch \
	%_file_list %{epics_root} > %{_builddir}/%{name}/epics.lst \
%{nil}

%_mtr_prep1 \
	grep -rl basic_ --include '*.substitutions*' | \
		xargs -r sed -ri 's/basic_((asyn_)?motor\\.db)/\\1/' \
	for s in $(cat ioc.lst); do cd "$s"; sed "s/ims/${s%IOC}/g" \\\
		%{_sourcedir}/epics-motorIms-6_1-libs.patch | patch -p1 \
	s="$(sed -n '/^#!MOTOR_/ { s/=.*//; s/^#!//; p}' \\\
		configure/EXAMPLE_RELEASE.local)" \
	sed -i -e '/^# RELEASE/ s@$@\\n'"$s"'=%{etop_supp}/%{repo}@' \\\
		-e 's@$(TOP)/\\.\\./\\.\\./\\.\\.@%{etop_supp}@' \\\
		-e 's@$(TOP)/\\.\\./\\.\\.@$('"$s"')@' \\\
		configure/RELEASE; cd -; done \
%{nil}
%_ad_prep1 \
	for s in $(cat ioc.lst); do cd "$s" \
	sed -i -e '/^AD.*=.*TOP/ s@=.*@=%{etop_supp}/%{repo}@' \\\
		-e 's@$(TOP)/\\.\\./\\.\\./\\.\\.@%{etop_supp}@' \\\
		configure/RELEASE; \\\
	%_fix_arch iocBoot/ioc*/Makefile; cd -; done \
%{nil}

