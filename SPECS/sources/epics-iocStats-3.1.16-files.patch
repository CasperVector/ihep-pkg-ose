diff -Nur iocStats-3.1.16/iocAdmin/Db/iocAdminCore.substitutions iocStats-3.1.16/iocAdmin/Db/iocAdminCore.substitutions
--- iocStats-3.1.16/iocAdmin/Db/iocAdminCore.substitutions	1970-01-01 08:00:00.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/iocAdminCore.substitutions	2021-07-24 17:53:39.933953000 +0800
@@ -0,0 +1,12 @@
+file iocCore.template
+{
+pattern { IOCNAME  , TODFORMAT           }
+	{ "$(IOC)" , "%m/%d/%Y %H:%M:%S" }
+}
+file iocEnvVar.template
+{
+pattern { IOCNAME  , ENVNAME      , ENVVAR                          , ENVTYPE}
+	{ "$(IOC)" , CA_ADDR_LIST , EPICS_CA_ADDR_LIST              , epics  }
+	{ "$(IOC)" , CA_SRVR_PORT , EPICS_CA_SERVER_PORT            , epics  }
+	{ "$(IOC)" , CA_MAX_ARRAY , EPICS_CA_MAX_ARRAY_BYTES        , epics  }
+}
diff -Nur iocStats-3.1.16/iocAdmin/Db/iocAdminExtras.substitutions iocStats-3.1.16/iocAdmin/Db/iocAdminExtras.substitutions
--- iocStats-3.1.16/iocAdmin/Db/iocAdminExtras.substitutions	1970-01-01 08:00:00.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/iocAdminExtras.substitutions	2021-07-24 17:52:59.211955000 +0800
@@ -0,0 +1,17 @@
+file iocExtras.template
+{
+pattern { IOCNAME  , TODFORMAT           }
+	{ "$(IOC)" , "%m/%d/%Y %H:%M:%S" }
+}
+file iocGeneralTime.template
+{
+pattern { IOCNAME }
+	{ "$(IOC)"  }
+}
+file iocEnvVar.template
+{
+pattern { IOCNAME  , ENVNAME      , ENVVAR                          , ENVTYPE}
+	{ "$(IOC)" , CA_AUTO_ADDR , EPICS_CA_AUTO_ADDR_LIST         , epics  }
+	{ "$(IOC)" , IOC_LOG_PORT , EPICS_IOC_LOG_PORT              , epics  }
+	{ "$(IOC)" , IOC_LOG_INET , EPICS_IOC_LOG_INET              , epics  }
+}
diff -Nur iocStats-3.1.16/iocAdmin/Db/iocAdminSystem.substitutions iocStats-3.1.16/iocAdmin/Db/iocAdminSystem.substitutions
--- iocStats-3.1.16/iocAdmin/Db/iocAdminSystem.substitutions	1970-01-01 08:00:00.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/iocAdminSystem.substitutions	2021-07-24 17:44:18.161989000 +0800
@@ -0,0 +1,13 @@
+file iocSystem.template
+{
+pattern { IOCNAME  , TODFORMAT           }
+	{ "$(IOC)" , "%m/%d/%Y %H:%M:%S" }
+}
+file iocEnvVar.template
+{
+pattern { IOCNAME  , ENVNAME      , ENVVAR                          , ENVTYPE}
+	{ "$(IOC)" , CA_CONN_TIME , EPICS_CA_CONN_TMO               , epics  }
+	{ "$(IOC)" , CA_RPTR_PORT , EPICS_CA_REPEATER_PORT          , epics  }
+	{ "$(IOC)" , CA_SRCH_TIME , EPICS_CA_MAX_SEARCH_PERIOD      , epics  }
+	{ "$(IOC)" , CA_BEAC_TIME , EPICS_CA_BEACON_PERIOD          , epics  }
+}
diff -Nur iocStats-3.1.16/iocAdmin/Db/iocCore.template iocStats-3.1.16/iocAdmin/Db/iocCore.template
--- iocStats-3.1.16/iocAdmin/Db/iocCore.template	1970-01-01 08:00:00.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/iocCore.template	2021-07-24 18:09:31.419891000 +0800
@@ -0,0 +1,178 @@
+record(stringin, "$(IOCNAME):STARTTOD")
+{
+    field(DESC, "Time and date of startup")
+    field(DTYP, "Soft Timestamp")
+    field(PINI, "YES")
+    field(INP, "@$(TODFORMAT)")
+}
+
+record(calcout, "$(IOCNAME):HEARTBEAT")
+{
+    field(DESC, "1 Hz counter since startup")
+    field(CALC, "(A<2147483647)?A+1:1")
+    field(OCAL, "A&1")
+    field(DOPT, "Use OCAL")
+    field(SCAN, "1 second")
+    field(INPA, "$(IOCNAME):HEARTBEAT")
+    field(OUT, "$(IOCNAME):HBLIGHT PP")
+}
+
+record(bo, "$(IOCNAME):HBLIGHT")
+{
+    field(DESC, "Heartbeat light")
+}
+
+# if autosave is working, START_CNT creates a running count of
+# number of times the IOC was started.
+record(calcout, "$(IOCNAME):START_CNT")
+{
+    field(DESC, "Increments at startup")
+    field(CALC, "A+1")
+    field(PINI, "YES")
+    field(INPA, "$(IOCNAME):START_CNT")
+    info(autosaveFields_pass0, "VAL")
+}
+
+record(sub, "$(IOCNAME):SYSRESET")
+{
+    alias("$(IOCNAME):SysReset")
+    field(DESC, "IOC Restart" )
+    field(SNAM, "rebootProc")
+    field(BRSV,"INVALID")
+    field(L,"1")
+}
+
+record(ai, "$(IOCNAME):CA_CLNT_CNT") {
+  field(DESC, "Number of CA Clients")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@ca_clients")
+  field(HOPR, "200")
+  field(HIHI, "175")
+  field(HIGH, "100")
+  field(HHSV, "MAJOR")
+  field(HSV, "MINOR")
+  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):CA_CONN_CNT") {
+  field(DESC, "Number of CA Connections")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@ca_connections")
+  field(HOPR, "5000")
+  field(HIHI, "4500")
+  field(HIGH, "4000")
+  field(HHSV, "MAJOR")
+  field(HSV, "MINOR")
+  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):RECORD_CNT") {
+  field(DESC, "Number of Records")
+  field(PINI, "YES")
+  field(DTYP, "IOC stats")
+  field(INP, "@records")
+}
+
+record(ai, "$(IOCNAME):FD_MAX") {
+  field(DESC, "Max File Descriptors")
+  field(PINI, "YES")
+  field(DTYP, "IOC stats")
+  field(INP, "@maxfd")
+}
+
+record(ai, "$(IOCNAME):FD_CNT") {
+  field(DESC, "Allocated File Descriptors")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(FLNK, "$(IOCNAME):FD_FREE  PP MS")
+  field(INP, "@fd")
+}
+
+record(calc, "$(IOCNAME):FD_FREE") {
+  field(DESC, "Available FDs")
+  field(CALC, "B>0?B-A:C")
+  field(INPA, "$(IOCNAME):FD_CNT  NPP MS")
+  field(INPB, "$(IOCNAME):FD_MAX  NPP MS")
+  field(INPC, "1000")
+  field(HOPR, "150")
+  field(LOLO, "5")
+  field(LOW, "20")
+  field(LLSV, "MAJOR")
+  field(LSV, "MINOR")
+  info(autosaveFields_pass0, "HOPR LOPR LOW LOLO LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):IOC_CPU_LOAD") {
+  alias("$(IOCNAME):LOAD")
+  field(DESC, "IOC CPU Load")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@ioc_cpuload")
+  field(EGU, "%")
+  field(PREC, "1")
+  field(HOPR, "100")
+  field(HIHI, "80")
+  field(HIGH, "70")
+  field(HHSV, "MAJOR")
+  field(HSV, "MINOR")
+  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):SUSP_TASK_CNT") {
+  field(DESC, "Number Suspended Tasks")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@suspended_tasks")
+  field(HIHI, "1")
+  field(HHSV, "MAJOR")
+  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):MEM_USED") {
+  field(DESC, "Allocated Memory")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@allocated_bytes")
+  field(EGU, "byte")
+}
+
+record(stringin, "$(IOCNAME):ST_SCRIPT1") {
+  field(DESC, "Startup Script Part1")
+  field(DTYP, "IOC stats")
+  field(INP, "@startup_script_1")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):HOSTNAME") {
+  field(DESC, "Host Name")
+  field(DTYP, "IOC stats")
+  field(INP, "@hostname")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):APP_DIR1") {
+  field(DESC, "Application Directory Part 1")
+  field(DTYP, "IOC stats")
+  field(INP, "@pwd1")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):ENGINEER") {
+  field(DESC, "Engineer")
+  field(DTYP, "IOC stats")
+  field(INP, "@engineer")
+  field(PINI, "YES")
+}
+
+record(ai, "$(IOCNAME):CB_Q_SIZE") {
+  field(DESC, "max # entries in IOC callback queues")
+  field(DTYP, "IOC stats")
+  field(INP,  "@cbQueueSize")
+  field(PINI, "YES")
+}
+
+substitute "QUEUE=cbLow, QUEUE_CAPS=CBLOW, QUEUE_TYPE=CB"
+include "iocQueue.db"
+
diff -Nur iocStats-3.1.16/iocAdmin/Db/iocExtras.template iocStats-3.1.16/iocAdmin/Db/iocExtras.template
--- iocStats-3.1.16/iocAdmin/Db/iocExtras.template	1970-01-01 08:00:00.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/iocExtras.template	2021-07-24 18:09:33.849891000 +0800
@@ -0,0 +1,152 @@
+# Used by Channel Access Security to determine access to this IOC.
+record(mbbo, "$(IOCNAME):ACCESS")
+{
+  field(DESC, "$(IOCNAME) Acc Mode")
+  field(PINI, "YES")
+  field(ZRST, "Running")
+  field(ZRSV, "NO_ALARM")
+  field(ONST, "Maintenance")
+  field(ONSV, "MINOR")
+  field(TWST, "Test")
+  field(TWSV, "MINOR")
+  field(THST, "OFFLINE")
+  field(THSV, "MAJOR")
+  info(autosaveFields, "VAL")
+}
+
+# Using an existing internal set of subroutines, this
+# PV updates the Access Security mechanism dynamically.
+# The .acf file is re-read.
+record( sub, "$(IOCNAME):READACF")
+{
+    field( DESC, "$(IOCNAME) ACF Update")
+    field( INAM, "asSubInit")
+    field( SNAM, "asSubProcess")
+    field( BRSV, "INVALID")
+}
+
+record(ao, "$(IOCNAME):CA_UPD_TIME") {
+  field(DESC, "CA Check Update Period")
+  field(DTYP, "IOC stats")
+  field(OUT, "@ca_scan_rate")
+  field(EGU, "sec")
+  field(DRVH, "60")
+  field(DRVL, "1")
+  field(HOPR, "60")
+  field(VAL, "15")
+  field(PINI, "YES")
+}
+
+record(ao, "$(IOCNAME):FD_UPD_TIME") {
+  field(DESC, "FD Check Update Period")
+  field(DTYP, "IOC stats")
+  field(OUT, "@fd_scan_rate")
+  field(EGU, "sec")
+  field(DRVH, "60")
+  field(DRVL, "1")
+  field(HOPR, "60")
+  field(VAL, "20")
+  field(PINI, "YES")
+}
+
+record(ao, "$(IOCNAME):LOAD_UPD_TIME") {
+  field(DESC, "CPU Check Update Period")
+  field(DTYP, "IOC stats")
+  field(OUT, "@cpu_scan_rate")
+  field(EGU, "sec")
+  field(DRVH, "60")
+  field(DRVL, "1")
+  field(HOPR, "60")
+  field(VAL, "10")
+  field(PINI, "YES")
+}
+
+record(ao, "$(IOCNAME):MEM_UPD_TIME") {
+  field(DESC, "Memory Check Update Period")
+  field(DTYP, "IOC stats")
+  field(OUT, "@memory_scan_rate")
+  field(EGU, "sec")
+  field(DRVH, "60")
+  field(DRVL, "1")
+  field(HOPR, "60")
+  field(VAL, "10")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):ST_SCRIPT2") {
+  field(DESC, "Startup Script Part2")
+  field(DTYP, "IOC stats")
+  field(INP, "@startup_script_2")
+  field(PINI, "YES")
+}
+
+record(waveform, "$(IOCNAME):ST_SCRIPT") {
+  field(DESC, "Startup Script")
+  field(DTYP, "IOC stats")
+  field(INP, "@startup_script")
+  field(NELM, "120")
+  field(FTVL, "CHAR")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):APP_DIR2") {
+  field(DESC, "Application Directory Part 2")
+  field(DTYP, "IOC stats")
+  field(INP, "@pwd2")
+  field(PINI, "YES")
+}
+
+record(waveform, "$(IOCNAME):APP_DIR") {
+  field(DESC, "Application Directory")
+  field(DTYP, "IOC stats")
+  field(INP, "@pwd")
+  field(NELM, "160")
+  field(FTVL, "CHAR")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):UPTIME") {
+  field(DESC, "Elapsed Time since Start")
+  field(SCAN, "1 second")
+  field(DTYP, "IOC stats")
+  field(INP, "@up_time")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):LOCATION") {
+  field(DESC, "Location")
+  field(DTYP, "IOC stats")
+  field(INP, "@location")
+  field(PINI, "YES")
+}
+
+record(ai, "$(IOCNAME):PROCESS_ID") {
+  field(DESC, "Process ID")
+  field(PINI, "YES")
+  field(DTYP, "IOC stats")
+  field(INP, "@proc_id")
+}
+
+record(ai, "$(IOCNAME):PARENT_ID") {
+  field(DESC, "Parent Process ID")
+  field(PINI, "YES")
+  field(DTYP, "IOC stats")
+  field(INP, "@parent_proc_id")
+}
+
+record(ai, "$(IOCNAME):SCANONCE_Q_SIZE") {
+  field(DESC, "max # entries in IOC scanOnce queue")
+  field(DTYP, "IOC stats")
+  field(INP,  "@scanOnceQueueSize")
+  field(PINI, "YES")
+}
+
+substitute "QUEUE=scanOnce, QUEUE_CAPS=SCANONCE, QUEUE_TYPE=SCANONCE"
+include "iocQueue.db"
+
+substitute "QUEUE=cbMedium, QUEUE_CAPS=CBMEDIUM, QUEUE_TYPE=CB"
+include "iocQueue.db"
+
+substitute "QUEUE=cbHigh, QUEUE_CAPS=CBHIGH, QUEUE_TYPE=CB"
+include "iocQueue.db"
+
diff -Nur iocStats-3.1.16/iocAdmin/Db/iocSystem.template iocStats-3.1.16/iocAdmin/Db/iocSystem.template
--- iocStats-3.1.16/iocAdmin/Db/iocSystem.template	1970-01-01 08:00:00.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/iocSystem.template	2021-07-24 17:28:04.993052000 +0800
@@ -0,0 +1,72 @@
+record(stringin, "$(IOCNAME):TOD")
+{
+    field(DESC, "Current time and date")
+    field(DTYP, "Soft Timestamp")
+    field(SCAN, "1 second")
+    field(INP, "@$(TODFORMAT)")
+}
+
+record(ai, "$(IOCNAME):SYS_CPU_LOAD") {
+  field(DESC, "System CPU Load")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@sys_cpuload")
+  field(EGU, "%")
+  field(PREC, "1")
+  field(HOPR, "100")
+  field(HIHI, "80")
+  field(HIGH, "70")
+  field(HHSV, "MAJOR")
+  field(HSV, "MINOR")
+  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):CPU_CNT") {
+  field(DESC, "Number of CPUs")
+  field(DTYP, "IOC stats")
+  field(INP, "@no_of_cpus")
+  field(PINI, "YES")
+}
+
+record(ai, "$(IOCNAME):MEM_FREE") {
+  field(DESC, "Free Memory")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@free_bytes")
+  field(EGU, "byte")
+  field(LLSV, "MAJOR")
+  field(LSV, "MINOR")
+  info(autosaveFields_pass0, "HOPR LOPR LOW LOLO LSV LLSV")
+}
+
+record(ai, "$(IOCNAME):MEM_MAX") {
+  field(DESC, "Maximum Memory")
+  field(SCAN, "I/O Intr")
+  field(DTYP, "IOC stats")
+  field(INP, "@total_bytes")
+  field(EGU, "byte")
+}
+
+record(stringin, "$(IOCNAME):KERNEL_VERS") {
+  field(DESC, "Kernel Version")
+  field(DTYP, "IOC stats")
+  field(INP, "@kernel_ver")
+  field(PINI, "YES")
+}
+
+record(stringin, "$(IOCNAME):EPICS_VERS") {
+  field(DESC, "EPICS Version")
+  field(DTYP, "IOC stats")
+  field(INP, "@epics_ver")
+  field(PINI, "YES")
+}
+
+record(waveform, "$(IOCNAME):EPICS_VERSION") {
+  field(DESC, "EPICS Version")
+  field(DTYP, "IOC stats")
+  field(INP, "@epics_ver")
+  field(NELM, "120")
+  field(FTVL, "CHAR")
+  field(PINI, "YES")
+}
+
diff -Nur iocStats-3.1.16/iocAdmin/Db/Makefile iocStats-3.1.16/iocAdmin/Db/Makefile
--- iocStats-3.1.16/iocAdmin/Db/Makefile	2019-08-17 05:53:23.000000000 +0800
+++ iocStats-3.1.16/iocAdmin/Db/Makefile	2021-07-24 18:22:21.553842144 +0800
@@ -12,6 +12,9 @@
 # databases, templates, substitutions like this
 #
 DB += ioc.db
+DB += iocCore.db
+DB += iocExtras.db
+DB += iocSystem.db
 DB += iocRTOS.db
 DB += iocVxWorksOnly.db
 DB += iocRTEMSOnly.db
@@ -23,6 +26,9 @@
 DB += access.db
 DB += iocAdminVxWorks.db
 DB += iocAdminSoft.db
+DB += iocAdminCore.db
+DB += iocAdminExtras.db
+DB += iocAdminSystem.db
 DB += iocAdminRTEMS.db
 DB += iocAdminScanMon.db
 
