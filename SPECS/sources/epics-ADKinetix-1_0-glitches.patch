diff -ur ADKinetix-R1-0/iocs/kinetixIOC/iocBoot/iocKinetix/st.cmd ADKinetix-R1-0/iocs/kinetixIOC/iocBoot/iocKinetix/st.cmd
--- ADKinetix-R1-0/iocs/kinetixIOC/iocBoot/iocKinetix/st.cmd	2024-07-26 23:54:23.000000000 +0800
+++ ADKinetix-R1-0/iocs/kinetixIOC/iocBoot/iocKinetix/st.cmd	2024-08-12 16:34:39.518785945 +0800
@@ -1,16 +1,12 @@
 #!../../bin/linux-x86_64/kinetixApp
-
-< /epics/common/xf31id1-lab3-ioc1-netsetup.cmd
-
 errlogInit(20000)
-
 < envPaths
 
 dbLoadDatabase("$(TOP)/dbd/kinetixApp.dbd")
 kinetixApp_registerRecordDeviceDriver(pdbbase)
 
 # Prefix for all records
-epicsEnvSet("PREFIX", "XF:31ID1-ES{Kinetix-Det:1}")
+epicsEnvSet("PREFIX", "13KINETIX1:")
 # The port name for the detector
 epicsEnvSet("PORT",   "KTX")
 # The queue size for all plugins
@@ -31,7 +27,7 @@
 
 # Create a standard arrays plugin, set it to get data from pvCamera driver.
 NDStdArraysConfigure("Image1", 1, 0, "$(PORT)", 0, 10000000)
-dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P=$(PREFIX),R=image:,PORT=Image1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=$(PORT),TYPE=Int16,FTVL=SHORT,NELEMENTS=4194304")
+dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P=$(PREFIX),R=image1:,PORT=Image1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=$(PORT),TYPE=Int16,FTVL=SHORT,NELEMENTS=4194304")
 
 # Load all other plugins using commonPlugins.cmd
 < $(ADCORE)/iocBoot/commonPlugins.cmd
diff -ur ADKinetix-R1-0/kinetixApp/src/ADKinetix.cpp ADKinetix-R1-0/kinetixApp/src/ADKinetix.cpp
--- ADKinetix-R1-0/kinetixApp/src/ADKinetix.cpp	2024-07-26 23:54:23.000000000 +0800
+++ ADKinetix-R1-0/kinetixApp/src/ADKinetix.cpp	2024-08-12 18:19:45.456237117 +0800
@@ -13,10 +13,10 @@
 #define ERR_TO_STATUS(pvcamFunc) reportKinetixError(functionName, pvcamFunc);
 
 // Flow message formatters
-#define LOG(msg) asynPrint(pasynUserSelf, ASYN_TRACE_ERROR, "%s::%s: %s\n", \
+#define LOG(msg) asynPrint(pasynUserSelf, ASYN_TRACEIO_DRIVER, "%s::%s: %s\n", \
                            driverName, functionName, msg)
 
-#define LOG_ARGS(fmt, ...) asynPrint(pasynUserSelf, ASYN_TRACE_ERROR, \
+#define LOG_ARGS(fmt, ...) asynPrint(pasynUserSelf, ASYN_TRACEIO_DRIVER, \
                                      "%s::%s: " fmt "\n", driverName, functionName, __VA_ARGS__);
 
 
@@ -549,7 +549,7 @@
             else
             {
                 this->cameraContext->isCamOpen = true;
-                LOG_ARGS("Opened camera...", this->cameraContext->camName);
+                LOG_ARGS("Opened camera %s...", this->cameraContext->camName);
 
                 // Camera is opened, collect model information
                 uns16 fwVersion;
@@ -1042,11 +1042,11 @@
 
     if (status != asynSuccess)
     {
-        ERR_ARGS("error, status=%d function=%d, value=%f", status, function, value);
+        ERR_ARGS("error, status=%d function=%d, value=%d", status, function, value);
     }
     else
     {
-        LOG_ARGS("function=%d, value=%f", function, value);
+        LOG_ARGS("function=%d, value=%d", function, value);
     }
 
     return status;
